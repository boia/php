<?php	/***	 * 类的介绍:这是一个验证框的类，初始化传入3个参数，	 * 依次是，背景颜色(包含3个int型的范围是(0到255))的数组、验证码的宽度和验证框的高度	 * 作者:boia	 * 时间:2012-10-26	 */	class Validate{		public $bgColor;                       //背景颜色，是一个包含3个int类型的数组		public $width;						   //验证码的宽度		public $height;						   //验证码的高度				//在验证框中要显示的字符		private $randNum = Array(0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z);				function __construct($bgColor,$width,$height){			$this->bgColor = $bgColor;			$this->width =  $width;			$this->height = $height;		}				function create(){			return imagecreate($this->width,$this->height);		}					function bgColorAllocate($image){			return imagecolorallocate($image,$this->bgColor[0],$this->bgColor[1],$this->bgColor[2]);		}				function colorAllocate($image,$red,$green,$blue){			return imagecolorallocate($image,$red,$green,$blue);		}				function string($image,$font,$x,$y,$s,$col){			return imagestring($image,$font,$x,$y,$s,$col);		}				function line($image,$x1,$y1,$x2,$y2,$color ){			return imageline($image,$x1,$y1,$x2,$y2,$color);		}				function setPixel($image,$x,$y,$color){			return imagesetpixel($image,$x,$y,$color);		}				function ttfText($image,$size,$angle,$x,$y,$color,$fontfile,$text){			return imagettftext($image,$size,$angle,$x,$y,$color,$fontfile,$text);		}				function png($image){			return imagepng($image);		}				function destroy($image){			return imagedestroy($image);		}		/**		 * 以下是适合自己的成员方法		 */				/**		 * 写n个随机的不同颜色的字符串，		 * 参数是一个图像标识符，另外是在验证框中有几个字符		 */		function drawNString($image,$num){			for($i=0;$i<$num;$i++){				$x = rand($i*$this->width/$num+3,($i+1)*($this->width-5)/$num-5);				$y = rand(3,15);				$font = rand(3,5);				$index = rand(0,35);						$color = $this->colorAllocate($image,rand(0,100),rand(0,100),rand(0,100));								$this->string($image,$font,$x,$y,$this->randNum[$index],$color);			}		}		/**		 * 画n个随机的不同颜色的点，		 * 参数是一个图像标识符，另外是在验证框中画多少点		 */		function drawNPixel($image,$num){			for($i=0;$i<$num;$i++){				$x = rand(1,99);				$y = rand(1,39);				$color = $this->colorAllocate($image,rand(0,255),rand(0,255),rand(0,255));				$this->setPixel($image,$x,$y,$color);			}		}				/**		 * 画n条随机的不同颜色的直线，		 * 参数是一个图像标识符，另外是在验证框中画几条直线		 */		function drawNLine($image,$num){			for($i=0;$i<$num;$i++){				$x1 = rand(0,35);				$x2 = rand(75,100);				$y1 = rand(0,40);				$y2 = rand(0,40);				$color = $this->colorAllocate($image,rand(0,255),rand(0,255),rand(0,255));				$this->line($image,$x1,$y1,$x2,$y2,$color);			}		}		/**		 * 写n个随机的不同颜色、不同角度、不同大小的字符串，包括中文，		 * 参数分别是一个图像标识符、字符的数目、字体文件、要写入的文字		 */				function drawNText($image,$num,$fontfile,$text){			for($i=0;$i<$num;$i++){				$x = rand($i*$this->width/$num+3,($i+1)*($this->width-5)/$num-5);				$y = rand(12,30);				$size = rand(7,15);								//字旋转的角度				$angle = rand(-90,90);				//$fontfile = 'SIMYOU.TTF';								//必须将文字转换为utf8格式，否则是乱码				$tx=iconv("gb2312","utf-8",$text);								$color = $this->colorAllocate($image,rand(0,100),rand(0,100),rand(0,100));								$this->ttfText($image,$size,$angle,$x,$y,$color,$fontfile,$tx);			}					}	}	/**	 * 	 * 下面是Demo，测试Validate的可行性	 *	 */	$color = Array(rand(100,255),rand(100,255),rand(100,255));			$validate = new Validate($color,100,40);		$im=$validate->create();		$validate->bgColorAllocate($im);			//SIMYOU.TTF必须是在你目录中存在的，因为是测试用，所以只写入了相同的文字"龙"	$validate->drawNText($im,5,'SIMYOU.TTF',"龙");		//$validate->drawNString($im,7);	$validate->drawNLine($im,5);	$validate->drawNPixel($im,400);	header("Content-type: image/png");		$validate->png($im);		$validate->destroy($im);?>